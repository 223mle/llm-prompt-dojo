[tool.poetry]
name = "llm-prompt-dojo"
version = "0.1.0"
description = ""
authors = ["daiki.tsutsumi <tsutsumi.aie@gmail.com>"]

[tool.poetry.dependencies]
python = "^3.11"
pydantic = "^2.9.2"
sumeval = "^0.2.2"
python-Levenshtein = "^0.25.1"
msgspec = "^0.18.6"
SudachiPy = "^0.6.8"
SudachiDict-full = "^20240409"
sudachidict-core = "^20240409"
sentencepiece = "^0.1.96"
flatdict = "^4.0.1"
polars = "^1.12.0"
python-dotenv = "^1.0.1"

[tool.poetry.group.dev.dependencies]
ruff = "^0.6.9"
pytest = "^8.3.3"
pytest-cov = "^5.0.0"
pytest-env = "^1.1.5"
pytest-profiling = "^1.7.0"
pytest-randomly = "^3.15.0"
pytest-timeout = "^2.3.1"
pytest-xdist = "^3.6.1"
tox = "^4.21.2"
moto = "^4.2.14"
pytest-mock = "^3.14.0"
pytest-reportlog = "^0.4.0"
nbconvert = "^7.7.3"
nbstripout = "^0.6.1"
pre-commit = "^4.0.1"
mypy = "^1.12.0"
pytest-clarity = "^1.0.1"
types-requests = "^2.32.0.20241016"
types-pytz = "^2024.2.0.20241003"

[tool.poetry.group.experiments]
optional = true

[tool.poetry.group.experiments.dependencies]
tqdm = "^4.66.4"
progressbar2 = "^4.4.2"
openai = "^1.43.0"
anthropic = "^0.39.0"
apscheduler = "^3.10.4"

[tool.poetry.group.jupyter]
optional = true

[tool.poetry.group.jupyter.dependencies]
jupyter = "^1.0.0"
jupyter-autotime = "^1.1.0"
jupyterlab = "^3.3.2"
jupyter-contrib-nbextensions = "^0.5.1"
jupyter_nbextensions_configurator = "^0.4.1"
jupyterthemes = "^0.20.0"
jupyterlab-spreadsheet-editor = "^0.6.1"

[tool.isort]
profile = "black"
line_length = 119
multi_line_output = 3
include_trailing_comma = true
skip = [".venv", ".tox"]

[tool.black]
line-length = 119
target-version = ["py310"]
skip-string-normalization = true
include = '\.py$'

[tool.pytest.ini_options]
addopts = "-rxXs --randomly-seed=1234 --randomly-dont-reorganize"
env = "D:TFIDF_DIR=tests/fixtures/models/tfidf"
testpaths = "tests/"

[tool.mypy]
python_version="3.11"
files = "src/jppen"
ignore_missing_imports = true
disallow_untyped_defs = true
no_implicit_optional = true
allow_redefinition = true
show_error_codes = true
pretty = true
allow_untyped_globals = true

[tool.flake8]
max-line-length = 119
ignore = "D, E203, W391, W503"
exclude = " .git, .venv, __pycache__, data, dist, misc, notebooks, prof, tmp, workspacea, .tox"

[tool.ruff]
exclude = [".git", ".mypy_cache", ".ruff_cache", ".venv", "third_party"]
line-length = 119
target-version = "py311"

[tool.ruff.lint]
fixable = ["ALL"]
unfixable = []
select = [
    "A",  # flake8-builtin
    "B",  # flake8-bugbear
    "E",  # pycodestyle error
    "F",  # Pyflakes
    "I",  # isort
    "N",  # pep8-naming
    "W",  # pycodestyle warning
    "PL",  # Pylint
    "UP",  # pyupgrade
]
ignore = [
    "PLR0913",  # Too many arguments in function definition
    "PLW0603",  # Checks for the use of global statements to update identifiers
    "B006",  # Mutable argument default
]

[tool.ruff.format]
quote-style = "single"
line-ending = "auto"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
